import numpy as np
from collections import defaultdict
from nltk.corpus import wordnet as wn

def mapping(source, transfile, mapfile, fout):
    '''
    source: the english training file, semcor.csv
    transfile: en-other language translationfile, each line containing a sentence pair
    mapfile: generated by fastalign, get the position of word alignment
    fout: training csv file from translations
    '''

    #1. read source file
    source_dicts = defaultdict(dict)
    fread = open(source)
    fread.readline()
    for line in fread:
        info = line.strip().split('\t')
        sentence, start, end, inst_id, lemma, pos, sensekey = info
        source_dicts[sentence][start] = [lemma, pos, sensekey]

    #2. get alignment
    target_dicts = {}
    fread1 = open(transfile)
    fread2 = open(mapfile)
    for line1, line2 in zip(fread1, fread2):
        sentences = line1.strip().split(' ||| ')
        maps = line2.strip().split(' ')
        source_en = sentences[1].split(' ')
        target_lang = sentences[0].split(' ')
 
        target_dicts[sentences[0]] = {}
        for map_ in maps:
            map_position = map_.split('-')
            if map_position[1] in source_dicts[sentences[1]].keys():
                source_lemma, source_pos, source_sense_key = source_dicts[sentences[1]][map_position[1]]
                target_dicts[sentences[0]][map_position[0]] = [target_lang[int(map_position[0])], source_lemma, source_pos, source_sense_key]

    #3. write target file
    with open(fout, 'w', encoding="utf-8") as g:
        g.write('sentence\ttarget_index_start\ttarget_index_end\ttarget_id\ttarget_lemma\ttarget_pos\tsense_key\n')
        for sentence in target_dicts.keys():
            for key in target_dicts[sentence].keys():
                target_lemma, source_lemma, source_pos, source_sense_key = target_dicts[sentence][key]
                new_line = '\t'.join((sentence, key, str(int(key)+1), target_lemma, source_lemma, 'WN'+source_pos, source_sense_key))
                g.write(new_line)
                g.write('\n')
        
if __name__ == "__main__":
    
    # same for de, es, fr, it
    mapping('../preprocess/semcor.csv', \
            './trans/de_semcor_v2.txt', \
            './trans/de_semcor_v2_align.txt', \
            './train_corpora/de_train2.csv') 
